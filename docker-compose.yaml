services:
  traefik:
    image: traefik:latest
    restart: always
    command:
      - --api=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.mytlschallenge.acme.tlschallenge=true
      - --certificatesresolvers.mytlschallenge.acme.email=${SSL_EMAIL}
      - --certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json
      - --log.level=DEBUG
      - --accesslog=true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - traefik_data:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro

  n8n:
    image: docker.n8n.io/n8nio/n8n:latest
    restart: always
    ports:
      - "127.0.0.1:5678:5678" # API & webhooks
      - "127.0.0.1:5679:5679" # Broker for external runners
    labels:
      - traefik.enable=true
      - traefik.http.routers.n8n.rule=Host(`${SUBDOMAIN}.${DOMAIN_NAME}`)
      - traefik.http.routers.n8n.tls=true
      - traefik.http.routers.n8n.entrypoints=web,websecure
      - traefik.http.routers.n8n.tls.certresolver=mytlschallenge
      - traefik.http.routers.n8n.middlewares=n8n@docker
      - traefik.http.middlewares.n8n.headers.SSLRedirect=true
      - traefik.http.middlewares.n8n.headers.STSSeconds=315360000
      - traefik.http.middlewares.n8n.headers.browserXSSFilter=true
      - traefik.http.middlewares.n8n.headers.contentTypeNosniff=true
      - traefik.http.middlewares.n8n.headers.forceSTSHeader=true
      - traefik.http.middlewares.n8n.headers.SSLHost=${DOMAIN_NAME}
      - traefik.http.middlewares.n8n.headers.STSIncludeSubdomains=true
      - traefik.http.middlewares.n8n.headers.STSPreload=true
    environment:
      # — Core Settings
      - N8N_HOST=${SUBDOMAIN}.${DOMAIN_NAME}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - WEBHOOK_URL=https://${SUBDOMAIN}.${DOMAIN_NAME}/

      # — Database (Postgres)
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=${DB_POSTGRESDB_HOST_VALUE}
      - DB_POSTGRESDB_DATABASE=${DB_POSTGRESDB_DATABASE_VALUE}
      - DB_POSTGRESDB_USER=${DB_POSTGRESDB_USER_VALUE}
      - DB_POSTGRESDB_PASSWORD=${DB_POSTGRESDB_PASSWORD_VALUE}
      - DB_POSTGRESDB_SCHEMA=${DB_POSTGRESDB_SCHEMA_VALUE}
      - DB_POSTGRESDB_PORT=5432

      # — Execution & Runners
      - EXECUTIONS_MODE=regular
      - N8N_RUNNERS_ENABLED=true # Enables external runners :contentReference[oaicite:4]{index=4}
      - N8N_RUNNERS_MODE=external # External mode :contentReference[oaicite:5]{index=5}
      - N8N_RUNNERS_AUTH_TOKEN=${RUNNER_AUTH_TOKEN}
      - N8N_RUNNERS_BROKER_LISTEN_ADDRESS=0.0.0.0
      - N8N_RUNNERS_BROKER_PORT=5679

      # — Security & Logging
      - NODE_ENV=production
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_LOG_LEVEL=debug

      # — Health & Metrics
      - N8N_METRICS=true # Enables /metrics endpoint :contentReference[oaicite:6]{index=6}
      - QUEUE_HEALTH_CHECK_ACTIVE=true # Activates /healthz and /healthz/readiness :contentReference[oaicite:7]{index=7}

    volumes:
      - n8n_data:/home/node/.n8n
      - ./local-files:/files

    healthcheck:
      test:
        [
          "CMD",
          "sh",
          "-c",
          'wget -qO- http://localhost:5678/healthz/readiness | grep -q ''{"status":"ok"}''',
        ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s # Give n8n more startup time before failing

  n8n-runner:
    image: docker.n8n.io/n8nio/n8n:latest
    restart: always
    entrypoint: ["/usr/local/bin/task-runner-launcher"]
    command: ["javascript"]
    depends_on:
      n8n:
        condition: service_healthy
    environment:
      - N8N_RUNNERS_MODE=external
      - N8N_RUNNERS_AUTH_TOKEN=${RUNNER_AUTH_TOKEN}
      - N8N_RUNNERS_TASK_BROKER_URI=http://n8n:5679
      - N8N_RUNNERS_MAX_CONCURRENCY=5
      - N8N_RUNNERS_AUTO_SHUTDOWN_TIMEOUT=0
      - N8N_LOG_LEVEL=debug
    healthcheck:
      test: ["CMD", "sh", "-c", "wget --spider -q http://n8n:5679/ || exit 1"]
      interval: 1m
      timeout: 10s
      retries: 3

volumes:
  n8n_data:
  traefik_data:
